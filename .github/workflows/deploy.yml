name: 'Terraform Web App CI/CD'

on: [push]
env:
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{  secrets.CLIENT_SECRET  }}
  ARM_SUBSCRIPTION_ID: ${{  secrets.SUBSCRIPTION_ID  }}
  ARM_TENANT_ID: ${{  secrets.TENANT_ID  }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Login to AZ CLI
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check
      
    - name: Terraform Plan
      run: terraform plan
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
  build-and-deploy-web-app:
    needs: Terraform
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action' 
      uses: actions/checkout@v2
      with:
        repository: kuhlman-labs/AzureEats-Website
   
    - uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
            
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 10.15.2
        
    - name: npm install
      working-directory: Source/Tailwind.Traders.Web/ClientApp
      run: |
        npm install

    - name: Setup dotnet core
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: 2.2.103

    - name: dotnet build
      working-directory: Source/Tailwind.Traders.Web
      run: dotnet build --configuration Release

    - name: dotnet publish
      working-directory: Source/Tailwind.Traders.Web
      run: |
          dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/ttweb
                   
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'tf-on-azure-challenge1-bk'
        package: ${{env.DOTNET_ROOT}}/ttweb
  
  aksbuildpush:
    needs: Terraform
    runs-on: ubuntu-16.04
    steps:

    - name: 'Checkout GitHub Action' 
      uses: actions/checkout@v2
      with:
        repository: kuhlman-labs/AzureEats-Website
    
    - uses: azure/docker-login@v1
      with:
        login-server: challenge4acrbrkuhlma.azurecr.io
        username: ${{ secrets.CLIENT_ID }}
        password: ${{ secrets.CLIENT_SECRET }}
        
    - name: Docker build and push
      working-directory: Source/Tailwind.Traders.Web
      run: | 
        docker build . --build-arg sdkTag=2.1 --build-arg runtimeTag=2.1 -t challenge4acrbrkuhlma.azurecr.io/web:gh-${{ github.sha }} -t latest
        docker push challenge4acrbrkuhlma.azurecr.io/web:gh-${{ github.sha }}
    
    - uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
      
    - name: Set AKS kubectl context
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: challenge4-aks1
        resource-group: challenge4-resources
      
    - name: Helm tool installer
      uses: Azure/setup-helm@v1
      
    - name: Install Helm Chart
      run: |
        helm upgrade --install tailwindtraders-web ./Deploy/helm/web -f ./Deploy/helm/gvalues.yaml -f ./Deploy/helm/values.b2c.yaml  --set ingress.hosts={challenge4-aks1}  --set ingress.protocol=https --set ingress.tls[0].hosts={challenge4-aks1}  --set image.repository=challenge4acrbrkuhlma.azurecr.io --set image.tag=gh-${{ github.sha }}